Quantitative information management for the biochemical computation of cellular networks

By 

Fabien Campagne1,3, Susana Neves2, Chung-wen Chang1, Lucy Skrabanek1,3, Prahlad T. Ram2, Ravi Iyengar2 and Harel Weinstein1,3,4.  


1 Department of Physiology and Biophysics, 2 Department of Pharmacology and Biological Chemistry, and 3 Institute for Computational Biomedicine, Mount Sinai School of Medicine, New York NY 10029 
And 4 Department of Physiology and Biophysics and Institute for Computational Biomedicine, Weill Medical College of Cornell University, New York NY, 10021



Address correspondence to:
Fabien Campagne Ph.D. 
Fabien.Campagne@physbio.mssm.edu 
One Gustave L. Levy Place, Box 1218
New York, NY 10029

					Abstract 

Understanding complex protein networks within cells requires the ability to develop quantitative models and to numerically compute the properties and behavior of the networks. Such computational analysis requires numerical solvers as well as information management systems wherein the quantitative data, associated to its biological context, can be stored and reliably retrieved.  We have focused on biochemical computation of cellular interactions and developed an information management system that stores quantitative information on the cellular components and interactions as well the basic reactions that can be used to construct a pathway and eventually a large-scale network. This system is called SigPath and is available on the internet (http://www.sigpath.org). Key features of our approach include: (i) the use of background information (e.g. names of the molecules, aliases, and accession codes) to ease data submission and link this quantitative database with other qualitative databases (ii) a strategy for the management of information that can be refined over time by multiple users[f1](iii) the development of  data representation to store both qualitative and quantitative information, (iv) features to assist end-users in assembling custom quantitative models from the information stored in the information system.  Currently, models assembled in SigPath can be automatically exported for computation in several computing environments such as JSim, Kinetikit/Genesis, Virtual Cell, Jarnac/JDesigner. We have constructed the ??adrenergic receptor-Gs interactions and MAP-kinase pathways with SigPath, and exported the models to each of the supported computing environments.  The simulations are identical to those obtained by manual entry of parameters into the various computing environments. We anticipate that when appropriately populated such a system will be useful for large-scale quantitative study of cell signaling networks and other cellular networks.

Introduction

Signaling networks arise from interconnections between pathways. Such networks coordinate the regulation of many cellular functions (1). Signaling networks result from various types of interactions including protein-protein interactions, interactions between small molecules and proteins and other cellular components, as well as many enzymatic reactions.  Obtaining a better understanding of the integrated behavior of such networks is a major challenge in systems biology.  

Methods and tools developed in bioinformatics have traditionally focused on specific parts of a biological system (e.g., proteins, transcripts, genes), and do not offer a clear way to derive integrated function from the information that can be gained from each part. As a consequence, biological databases represent biological function in a variety of ways, and at various conceptual levels. Some databases (e.g., Swiss-Prot, Genbank) represent function as text. Textual representations are useful to users who need detailed information about a few molecules. Since natural language text is very difficult to deal with computationally, textual representations are not very well suited to large-scale computation.  New representations, such as the Gene Ontology, have been developed to address this drawback and endow biological databases with features that support some types of computational analysis such as the automatic transfer of functional annotations from one genome to another (2). 

A first step towards representing mechanisms underlying function explicitly was presented By Karp  (3) who introduced  introduces the concepts of local function (results from the direct interaction of a few molecules) and integrated function (interaction of many molecules) and provides examples of computations that become possible when representing local function with the EcoCyc ontology. Karp also suggested that pathway databases (e.g., EcoCyc) can form the basis of a computational symbolic theory (4). In this paper, we describe a computational approach that combines information management with a framework to derive integrated function from local function (i.e., quantitative modeling and simulation of cellular pathways). In contrast to previous ontologies, our approach can support computational quantitative theories that build on advances achieved in predicting the behavior of biological systems with quantitative models. 

Models of integrated biological systems come in various forms. At one extreme, are the cartoon descriptions of biological systems. These could be considered (conceptual) models and such significant models have obvious advantages such as simplicity, but they also have drawbacks. For instance, they almost inevitably include hidden assumptions, may not be scalable, and often make it impossible to know the limits of utility of such models. This emphasizes the importance of formal models generated by applying a set of well-defined rules, i.e., a modeling formalism, to represent the interactions of biological entities.
Some of these formalisms have their roots in physical chemistry such as the deterministic and stochastic approaches (5), while others apply knowledge representations (6) developed in artificial intelligence to biological pathways (7), (8), (9). Deterministic and stochastic approaches differ with respect to the types of implicit assumptions that they make to render the model mathematically solvable (10). Approaches based on knowledge representations assume that biological information can be represented in a form that enables computational algorithmic reasoning about this information. However, methods developed using this approach have yet to demonstrate that non-intuitive insight can be obtained from knowledge representation models. Hence it would be more appropriate to use deterministic and stochastic approaches. The stochastic formalism explicitly models reactions as random events involving discrete molecules. The deterministic formalism assumes that molecules can be represented through their concentrations (continuous variables instead of discrete number of molecules) and that the changes in the concentrations are fully determined by the initial concentrations. The deterministic formalism is thus based on assumptions that make it more applicable to systems containing large number of molecules, whereas the stochastic formalism better represents systems with few molecules or events. Both type of formalisms have been used to build biochemical models of cellular systems (11, 12). In the approach presented here, we focus on modeling formalisms that explicitly represent biochemical interactions and provide non-intuitive understanding of integrated biological systems.
Once an appropriate formalism has been chosen, quantitative modeling and simulation are greatly simplified when performed with modeling tools. Such modeling tools have evolved into complete environments that combine components such as user interfaces to submit information about the parts and interactions that make up the model, with numerical solvers and user interfaces, to analyze the results of simulations. Examples of modeling environments that support the deterministic or stochastic formalisms include: Gepasi (13), Kinetikit/Genesis (14), Jarnac (15), JSIM (16), VirtualCell (17). Such systems provide many features designed to help users create and compute a given model, but usually offer limited data sharing capabilities. Yet, to develop large-scale models of hundreds and eventually thousands of components, and to assemble integrated models from legacy data as well as from new information, there is a need for efficient information management systems that deal with quantitative data. We have developed an initial prototype of such a system, named SigPath, to manage quantitative data and support the development of biochemical models. Here, we describe the construction and key features of SigPath and demonstrate how it can be used to automatically link to modeling programs for the facile computation of signaling pathways.

 

Materials and Methods
The web front-end of SigPath is running on an Apache web-server with a Tomcat application server, and was built with the Struts framework (http://jakarta.apache.org/struts/) and with Java Server Pages for the presentation layer (http://java.sun.com/products/jsp/). 
Persistent storage is done in an object-oriented database (FastObjects 9) using the ODMG 3.0 API (18).
XML import-export is done with the Castor XML data-binding framework (http://castor.exolab.org/).  
Background information has been imported from Swiss-Prot, TREMBL (human, rodent, mammal) for proteins and NCIOpen for small molecules. Background information consists of names, description, aliases and accession codes of the molecules. For Swiss-Prot and TREMBL, we used SwissKnife to parse the flat files and create XML files that can be submitted to SigPath. Background information is used throughout SigPath to perform queries that select specific molecules.  
Keyword searches are performed with an inverted text index. Names, descriptions and aliases of SigPath entities are split into keywords at spaces and punctuation characters. Each keyword is represented by an object stored in the database and indexed on its value. ("G Protein-Coupled Receptor" would be parsed into four keywords, of values "G", "Protein", "Coupled", "Receptor"). Each keyword instance references the SigPath entities that contain its value in background information fields.
Model Export. Information in a model is translated into the format supported by a specific modeling environment. The translation is done assuming that the basic reactions included in the model follow mass action law. Values of concentrations and rates are converted to unifying units, to produce models that measure concentrations in a unique, so called "target unit". Enzymatic reactions are converted to two basic reactions assuming a Michaelis-Menten mechanism with an irreversible product formation step. The two basic reactions that result from the conversion are then treated as basic reactions.

Results
Figure 1 presents a comparison of SigPath with genomic and protein-protein interaction databases and describes the types of information supported by SigPath. The key feature of Sigpath is its ability to store qualitative information about reactions as well as quantitative information such as concentration of reactants and rate constants for the reactions. The components of the Sigpath system and their roles are defined in Table 1.

SigPath Ontology
The SigPath ontology is based on the EcoCyc ontology (3). Both ontologies share the concepts of  reactions and enzymatic reactions. The SigPath ontology extends a subset of EcoCyc with features to store quantitative information (e.g., concentration measurements, kinetic rates and enzymatic parameters). These extensions are furtherdocumented in the developer section of the project web pages.
Submission Tools
SigPath accepts information from the different types shown on Figure 1. Most types of qualitative information involve relationships among biological entities. To facilitate submission of this type of information, SigPath contains background information about many entities (i.e., proteins, small molecules). In SigPath, background information consists of molecule names, descriptions and aliases, as well as external references (accession codes in other databases). 

SigPath supports the following submission approaches: (i) BioWizards and (ii) XML submissions, (iii) paper-based submissions. We believe that these three complementary approaches are needed to support data submitters with different backgrounds. 

BioWizards provide a user interface for the submission of binding, phosphorylation and dephosphorylation interactions. (The initial prototype is focused on these three types of biochemical interactions, but the approach described here can be extended to other types of interactions.) Each BioWizard is a user interface designed specifically to support the submission of one type of information. For instance, a user, who starts the submission of a binding interaction, is prompted for the identity of the molecules that bind to form a complex. When these molecules have been identified, the BioWizard transparently creates an explicit instance of the complex. As shown in this example, BioWizards have two main roles: Guides and Translators. A BioWizard is designed for biologists with limited data management experience, it interacts with users in a biological language designed to guide them through the different steps of a submission. BioWizards are also translators because they translate information expressed in the language of the user into a form compatible with the SigPath ontology (for example, in their role of Translators, BioWizards are responsible for creating instances of modified  proteins, used in the SigPath ontology to represent phosphorylated forms of proteins). 

XML submissions are designed for advanced users and curators. Submissions of information must be formatted according to the SigPath information exchange schema. This XML schema (19)(see http://www.w3.org/XML/Schema) defines very explicitly what elements of information are expected in a valid submission. Each element of information that can be represented in SigPath can be imported through an XML submission. This provides an important flexibility that is appreciated by advanced users and often required for curation of the information. XML submissions can be prepared with text editors or specialized XML editors. We have implemented data validation and context-sensitive highlighting of errors to help users diagnose errors at submission time. The SigPath information exchange schema is documented on the project web pages (http://www.sigpath.org, see "SigPath XML Schema" menu item).

To make it possible for users uncomfortable with electronic submission to contribute information to SigPath, we are experimenting with paper-based submissions. To this effect we have created forms that can be filled on paper and mailed or faxed to us. 

Each type of submission tool offered by SigPath invites users to link molecules to existing biological databases. Most often, this function is performed transparently to the user. For instance, the BioWizard relies on background information obtained from Swiss-Prot and never prompts the user to enter cross-references to other databases. Instead, the user searches background information to locate proteins that already have cross-references defined. This approach saves the user the tedious task of defining names or accession codes for each protein in a model, and also avoids errors and omissions. 

The submission tools are a crucial part of the approach that we describe here, because they make it possible for biologists to submit structured information to the information system. 
Model Assembly Tools
In this initial version, SigPath supports the creation of single compartment models. Such models assume that the modeled system can be represented as one well-stirred compartment where molecules can react. The model assembly process assumes that the reactions needed to construct a model have already been submitted to SigPath and walk the user through the steps needed to select reactions and initial concentrations. 
Model Export Tools
When a model has been assembled and deposited into SigPath, it is available for users to export in a format compatible with supported modeling environments. At the time of writing, SigPath supports the JSim (16), Kinetikit/Genesis (14) and SBML  ADDIN EN.CITE <EndNote><Cite ExcludeYear="1"><Author>Hucka</Author><Year>2003</Year><RecNum>123</RecNum><MDL><REFERENCE_TYPE>0</REFERENCE_TYPE><ACCESSION_NUMBER>12611808</ACCESSION_NUMBER><VOLUME>19</VOLUME><NUMBER>4</NUMBER><YEAR>2003</YEAR><DATE>Mar 1</DATE><TITLE>The systems biology markup language (SBML): a medium for representation and exchange of biochemical network models</TITLE><PAGES>524-31</PAGES><AUTHOR_ADDRESS>Control and Dynamical Systems, MC 107-81, California Institute of Technology, Pasadena, CA 91125, USA. sysbio-team@caltech.edu</AUTHOR_ADDRESS><AUTHORS><AUTHOR>Hucka, M.</AUTHOR><AUTHOR>Finney, A.</AUTHOR><AUTHOR>Sauro, H. M.</AUTHOR><AUTHOR>Bolouri, H.</AUTHOR><AUTHOR>Doyle, J. C.</AUTHOR><AUTHOR>Kitano, H.</AUTHOR><AUTHOR>Arkin, A. P.</AUTHOR><AUTHOR>Bornstein, B. J.</AUTHOR><AUTHOR>Bray, D.</AUTHOR><AUTHOR>Cornish-Bowden, A.</AUTHOR><AUTHOR>Cuellar, A. A.</AUTHOR><AUTHOR>Dronov, S.</AUTHOR><AUTHOR>Gilles, E. D.</AUTHOR><AUTHOR>Ginkel, M.</AUTHOR><AUTHOR>Gor, V.</AUTHOR><AUTHOR>Goryanin,, II</AUTHOR><AUTHOR>Hedley, W. J.</AUTHOR><AUTHOR>Hodgman, T. C.</AUTHOR><AUTHOR>Hofmeyr, J. H.</AUTHOR><AUTHOR>Hunter, P. J.</AUTHOR><AUTHOR>Juty, N. S.</AUTHOR><AUTHOR>Kasberger, J. L.</AUTHOR><AUTHOR>Kremling, A.</AUTHOR><AUTHOR>Kummer, U.</AUTHOR><AUTHOR>Le Novere, N.</AUTHOR><AUTHOR>Loew, L. M.</AUTHOR><AUTHOR>Lucio, D.</AUTHOR><AUTHOR>Mendes, P.</AUTHOR><AUTHOR>Minch, E.</AUTHOR><AUTHOR>Mjolsness, E. D.</AUTHOR><AUTHOR>Nakayama, Y.</AUTHOR><AUTHOR>Nelson, M. R.</AUTHOR><AUTHOR>Nielsen, P. F.</AUTHOR><AUTHOR>Sakurada, T.</AUTHOR><AUTHOR>Schaff, J. C.</AUTHOR><AUTHOR>Shapiro, B. E.</AUTHOR><AUTHOR>Shimizu, T. S.</AUTHOR><AUTHOR>Spence, H. D.</AUTHOR><AUTHOR>Stelling, J.</AUTHOR><AUTHOR>Takahashi, K.</AUTHOR><AUTHOR>Tomita, M.</AUTHOR><AUTHOR>Wagner, J.</AUTHOR><AUTHOR>Wang, J.</AUTHOR></AUTHORS><SECONDARY_TITLE>Bioinformatics</SECONDARY_TITLE><URL>http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?cmd=Retrieve&amp;db=PubMed&amp;dopt=Citation&amp;list_uids=12611808</URL></MDL></Cite></EndNote>(19) formats. Exporting a model consists of translating the model, expressed in the SigPath ontology, to the semantics and format of a modeling environment. For JSim, exporting consists of generating ordinary differential equations that describe the derivative of the change in concentrations of the molecules with respect to time. For Kinetikit/Genesis, exporting consists of adding messages among reactions, enzymatic reactions, and pools of molecules.  The formats and semantic of the input to JSim and Kinetikit/Genesis are completely different, but this is not an issue for users of SigPath. They simply need to select a target environment and press "Export" for the model to be generated. 

Figure 2 shows the main components of SigPath and how they relate to typical components of a modeling environment. The figure also highlights the flow of information within SigPath and between SigPath and modeling environments. 
Browsing, Query and Visualization.
We have implemented a number of ways to browse and query the information contained in SigPath. From the main page of the web application users can obtain a collection of all the chemical species (currently includes proteins, small molecules and complexes of any combination of these), reactions and models stored in SigPath. For chemicals and reactions, SigPath supports queries by combination of keywords, or by accession code. The query feature is used throughout SigPath when a user needs to select a chemical or a reaction. Querying occurs for instance, when the phosphorylation BioWizard prompts users to select the substrate of the enzymatic reaction being submitted.

Most types of information stored in SigPath can be visualized through hypertext documents. Chemicals are shown on the "Chemical Details Page". This page provides background information about the chemical (name, description, aliases, organism which produces the chemical, hyperlinks to external databases), reactions in which the chemical is involved and concentrations measured in various experimental and biological contexts 

Models assembled by users are also visualized graphically: the document that displays individual models displays a diagram of the reactions in the model. The diagram is created automatically from information stored in SigPath, and from a series of conventions, which define how specific types of reactions will be rendered graphically. The user can select the convention that best fits the reactions in the model, from a set of three conventions.  The current choice of conventions offered does not cover every user's need, and more research is needed to refine graphical conventions and algorithms used for automatic pathway rendering. However, diagrams of models currently built by SigPath are already useful when reviewing information. This visualization feature is also available for pathways (defined as sets of qualitative reactions).
Information Management Support
Central to the design of SigPath is the requirement that the system help users manage information, as this information is refined over time. Information can be refined over time, for instance when new biochemical interactions are discovered. SigPath provides assistance with this in several ways:

First, the query capability of SigPath, supported by its ontology, allows the querying of the information system for all the reactions that involve a given chemical entity. This feature is analogous to bibliographical searches that investigators conduct to keep abreast of interactions identified with their preferred molecule. The disadvantage of bibliographical searches is that they are time consuming, while their advantage lies in the fact that they search the most up-to-date sources of information. Since a binding or phosphorylation interaction can be submitted to SigPath in a few minutes, and retrieved at a latter date in seconds, SigPath can in principle be used to index publications by molecules.

Second, SigPath stores both qualitative and quantitative information, and offers the ability to upgrade the former to the latter. For instance, one user of SigPath may submit a qualitative interaction (binding of two monomers to form a complex). A second user who measured the kinetic rates of this interaction may submit these rates, thus upgrading qualitative information to a quantitative level. When the information is upgraded, SigPath will automatically allow users of the model assembly tools to use the interaction in a model.

Third, SigPath helps modelers disambiguate the identity of the molecules included in the models. Most modeling environments allow modelers to create a new molecule with only a name to differentiate it from the other molecules in the model. Such names are generally short text strings of about 5-30 characters chosen freely by authors. Such a naming scheme is convenient when building a model, because chemical species can be created quickly, but has the following drawbacks: (i) The name is often perfectly explicit only to the author(s) of the model.  Other people may have difficulty linking the name chosen by the author(s) to the biological entity that the name represents. (ii) names do not support automatically linking entities to their genomic context (e.g., linking proteins to   transcripts, gene and genetic loci) (iv) the name is only unique within a given model, so merging models created by different authors may be difficult and sometimes challenging. This may slow down the creation of integrated models for the study of large signaling networks of the type that control most cellular phenotypes.

Examples  and Validation
As an example, and test of our approach, we submitted qualitative and quantitative information about two pathways to SigPath. The Gs pathway and MAPK cascades were used for this test. The Gs pathway contains only binding reactions, whereas the MAPK cascade mostly include enzymatic reactions. Therefore, the validation exercise tests both types of quantitative information that SigPath supports in assembling models. Such validation processes are important because they determine whether the critical components of the system work together to support the process that they have been designed to streamline. This validation can therefore be considered both as a proof of concept for our approach, and as a practical test of our implementation. 

In Figure 3 we show an example of the MAP-kinase 1, 2 pathway from GTP bound Ras to MAP-kinase 1, 2. A schematic diagram is shown in Figure 3A and the reactions stored in Sigpath are shown in Figure 3B.   Figure 4 shows the two validation models and the results of the validation. Here we ran the simulations of ?-adrenergic receptor activation of G?s manually in Kinetikit/Genesis and compared it to results obtained by automatic export of data from Sipath to Genesis or to JSim. We similarly modeled Raf-1 activation of MAP-kinase 1, 2. In both cases the results of the simulation by export of data from Sigpath to the simulation environments was identical in both environments and to simulation generated by manual data entry into Kinetikit/Genesis (Figure 4, lower panels, left and right). The results confirm that storing information directly in SigPath, and producing quantitative models for Kinetikit and JSim produces simulations that are consistent with models set up manually in these simulators. We have also reproduced these results with the SBML export of SigPath, when models were run in Virtual Cell and Jarnac/Jdesigner (data not shown). 

These initial simulations, which represent generalized pathways, may be considered canonical in nature. Such canonical simulations could serve as a useful starting point for development of cell-type specific models. For instance if the different cell types contain various splice forms of G?s in various ratios, then Sigpath can be used to specify each of these entities and then attach the appropriate quantitative information to each isoform and develop a cell-type specific model. Thus the linking of the names of the various chemical entities to the existing qualitative databases provides a powerful approach for the systematic representation of known variations in quantitative values and link the differences to distinct molecular species.

Discussion

SigPath is a prototype for an information management system that intimately connects information stored in biological databases with biochemical modeling approaches. Connecting biological databases to modeling tools is essential for two main reasons. Firstly, biological databases such as protein or genome databases contain our current knowledge of the parts of the cell. Secondly, biochemical modeling approaches enable the study of integrated systems made from the very parts described by biological databases. Therefore, if we are to use the results of the genomic effort to understand the parts of a cell function as an integrated system, efforts must intensify to develop gateways between these two types of resources. The  properties and capabilities offered by the SigPath systems are best illustrated by comparison to other currently implemented bioinformatics tools. 

Consensual Knowledge Base vs. Information Management System
SigPath is not a consensual knowledge base (CKB) (20). CKBs offer a consensus of a subset of biological knowledge at a given time. An important step in constructing a CKB is thus to resolve the conflicts that may exist in knowledge that the CKB will store. How conflicts are resolved will determine the quality of the consensus data stored in a given CKB. However functional data is often context dependent and quantitative experimental data, which seems to be conflicting, could be reconciled with appropriate specification of context. Conflicting information can play an important role in the scientific discovery process by adequately describing complex systems, especially in a rapidly developing field such as the study of signaling networks. Therefore, SigPath allows the submission of potentially conflicting information. Examples would include: same reaction with different rates, different measured concentrations for the same molecule in the same tissue, storage of the same overall process through different elementary steps. At this time SigPath does not offer automated mechanisms to support the resolution of such conflict although the comments field can be used to textually specify context. To keep the information meaningful and most useful to users, regardless of potential conflicts, each element of information should be supported by (and linked to) at least one primary publication. This representation of ambiguities should be very useful in developing functional analysis of complex systems. Often varying results are obtained due to differences in the context within which the measurements are made. It may not be possible at the current time to define these contexts in quantitative terms.  For instance in the model we analyzed in Figure 4, the rates of G?s activation under different cellular conditions could be different due to varying concentrations of the long and short isoforms that have different rates of GDP release (21). Such variations in measured rates of activation could be subsequently clarified when the concentrations of the two G?s isoforms are measured under various physiological conditions. Hence the recording of the potentially conflicting data may allow new experiments to better define these contexts.  Sigpath when adequately developed could function as a stimulus for the quantitative experiments that better define the various cellular contexts.

Other approaches to the management of quantitative information: SBML and CellML
SBML (http://www.sbw-sbml.org) and CellML (http://www.cellml.org) are being developed as XML-based formats to facilitate the exchange of models across modeling tools (see also (19) about SBML). SBML (level 1) is often viewed as a more concise format than CellML and addresses a real need of the modeling community as a lingua franca for exchanging quantitative models. Hence, an increasing number of tools offer support for SBML. SigPath can export models in SBML level 1 and is thus compatible with modeling environments that can import this format. Information in SBML files cannot be imported into SigPath at this time because models available in SBML format do not link molecules to their genomic context.  Both SBML and CellML can also be used to construct repositories of models, and as such, can support approaches to manage quantitative information. Yet, since these approaches are based on file formats, the management of information (e.g., querying for individual interactions, reusing interactions from one model to assemble another model, reviewing data) is left to tools (or users) that directly manipulate the content of the files. 

Quantitative Databases
The Database of Quantitative Cellular Signaling (DOQCS) (22) provides libraries of quantitative models available for download in several formats (Matlab, Kinetikit). This resource provides quantitative data and pathways diagrams, and has often been used as a reference for the initial submission of quantitative data to SigPath. In contrast to SigPath, DOQCS models do not link molecules to their genomic context, and lack data management features (for instance, it is not possible for users to submit new data directly in DOCQS). The BRENDA database offers kinetic data about enzymatic reactions (23), but does not provide mechanisms to produce models from the data.

Systems that manage or store qualitative information

EcoCyc is a knowledge base that allows the management of metabolic pathways (24). The SigPath ontology is based on the EcoCyc ontology, so EcoCyc and SigPath share important features. Most importantly, both systems support functional computations, as described (3, 4). In contrast to EcoCyc, SigPath supports each step of the process required to manage quantitative information and produce quantitative models. SigPath allows management of the information through the web, whereas EcoCyc requires a local installation. A number of pathway databases are available (for instance, metabolic: KEGG (25), signaling: CSNDB (26), TRANSPATH (27)) and STKE (http://stke.sciencemag.org). These systems do not offer information management capabilities (with the exception of STKE); and none of these support quantitative information or the creation of quantitative models. 

A number of databases have been developed to store high-throughput protein-protein interaction measurements (yeast two-hybrid, mass-spectrometry, etc.). Major examples of protein-protein interaction databases include: BIND (28), DIP (29), YPD (30). Some of them, such as BIND, make it possible for users to submit data directly to the database. Protein-protein interaction databases offer limited support beyond the storage of binding interactions. Enzymatic reactions and second order spontaneous reactions, for instance cannot be stored explicitly and since the information is qualitative, such databases are not useful for quantitative modeling. Similarly, Gene Ontology represents biological function and processes with a controlled vocabulary, so that the mechanisms underlying each biological process are not specified. 


Perspective
We have developed an information management system that stores both qualitative and quantitative information. At the qualitative end our system links to the large current body of qualitative knowledge in SwissProt, TREMBL. Storing qualitative information can be useful because in the appropriate information management environment, it can be upgraded to quantitative information. Such iterative refinement of information and develops a database of 'parts specifications' rather then simply a parts listing in a necessary step in developing large-scale models of cellular networks. Since the construction of quantitative models of signaling pathways and networks is our main focus, the quantitative data in SigPath and the automatic connection to different computing environments allows us to develop detailed simulations and predictive models of signaling networks. Thus SigPath can serve not only as a repository of quantitative information on components and their relationships but also as a bridge between the current databases and the large scale functional networks that will have to be analyzed quantitatively in the future.  
Acknowledgments
We thank Ethan Cerami, Benjamin Chiang, Anat Maoz and Manda Wilson for help with software development, Piali Mukherjee for help with documentation of the project and support to end users, the Institute for Computational Biomedicine of Mount Sinai School of Medicine for seed funding of this project, NIH-NIDA for P01 DA12923 (HW),
 NIH-NHLBI for a Pre-NPEBC P20 program (HW) award, NIH-NCI R01 CA-81050 (RI) and NIH-NIGMS R01 GM 54-508 (RI). 


References
 

1.	Jordan, J. D., Landau, E. M. & Iyengar, R. (2000) Cell 103, 193-200.
2.	Ashburner, M., Ball, C. A., Blake, J. A., Botstein, D., Butler, H., Cherry, J. M., Davis, A. P., Dolinski, K., Dwight, S. S., Eppig, J. T., Harris, M. A., Hill, D. P., Issel-Tarver, L., Kasarskis, A., Lewis, S., Matese, J. C., Richardson, J. E., Ringwald, M., Rubin, G. M. & Sherlock, G. (2000) Nat Genet 25, 25-9.
3.	Karp, P. D. (2000) Bioinformatics 16, 269-85.
4.	Karp, P. D. (2001) Science 293, 2040-4.
5.	Gillepsie, D. (1977) J Phys Chem 81, 2340-2361.
6.	Davis R, S. H., Szolovits, P (1993) in AI Magazine, Vol. 14, pp. 17-33.
7.	Reddy, V. N., Mavrovouniotis, M. L. & Liebman, M. N. (1993) Proc Int Conf Intell Syst Mol Biol 1, 328-36.
8.	Reddy, V. N., Liebman, M. N. & Mavrovouniotis, M. L. (1996) Comput Biol Med 26, 9-24.
9.	Peleg, M., Yeh, I. & Altman, R. B. (2002) Bioinformatics 18, 825-37.
10.	Gibson, M., Bruck, J (2000) J. Phys Chem 104, 1876-1889.
11.	Bhalla, U. S., Ram, P. T. & Iyengar, R. (2002) Science 297, 1018-23.
12.	Blake, W. J., M, K. A., Cantor, C. R. & Collins, J. J. (2003) Nature 422, 633-7.
13.	Mendes, P. (1993) Comput Appl Biosci 9, 563-71.
14.	Bhalla, U. S. (2002) Methods Enzymol 345, 3-23.
15.	Sauro, H. M.
16.	NSR (2002) (National Simulation Resource, Washington University.
17.	Loew, L. M. & Schaff, J. C. (2001) Trends Biotechnol 19, 401-6.
18.	Jordan D, R. C., Schadow O, Stanienda T, Velez  F (2000) The Object Data Standard: ODMG 3.0 (Morgan Kaufmann Publishers, San Francisco).
19.	Hucka, M., Finney, A., Sauro, H. M., Bolouri, H., Doyle, J. C., Kitano, H., Arkin, A. P., Bornstein, B. J., Bray, D., Cornish-Bowden, A., Cuellar, A. A., Dronov, S., Gilles, E. D., Ginkel, M., Gor, V., Goryanin, II, Hedley, W. J., Hodgman, T. C., Hofmeyr, J. H., Hunter, P. J., Juty, N. S., Kasberger, J. L., Kremling, A., Kummer, U., Le Novere, N., Loew, L. M., Lucio, D., Mendes, P., Minch, E., Mjolsness, E. D., Nakayama, Y., Nelson, M. R., Nielsen, P. F., Sakurada, T., Schaff, J. C., Shapiro, B. E., Shimizu, T. S., Spence, H. D., Stelling, J., Takahashi, K., Tomita, M., Wagner, J. & Wang, J. (2003) Bioinformatics 19, 524-31.
20.	Euzenat, J. (1995) in Towards very large knowledge bases, ed. Mars, N. (IOS press, Amsterdam (NL), Enschede (NL)), pp. 43-155.
21.	Graziano, M. P., Freissmuth, M. & Gilman, A. G. (1989) J Biol Chem 264, 409-18.
22.	Sivakumaran, S., Hariharaputran, S., Mishra, J. & Bhalla, U. S. (2003) Bioinformatics 19, 408-15.
23.	Schomburg, I., Chang, A. & Schomburg, D. (2002) Nucleic Acids Res 30, 47-9.
24.	Karp, P. D., Riley, M., Saier, M., Paulsen, I. T., Paley, S. M. & Pellegrini-Toole, A. (2000) Nucleic Acids Res 28, 56-9.
25.	Kanehisa, M., Goto, S., Kawashima, S. & Nakaya, A. (2002) Nucleic Acids Res 30, 42-6.
26.	Takai-Igarashi, T., Nadaoka, Y. & Kaminuma, T. (1998) J Comput Biol 5, 747-54.
27.	Wingender, E., Chen, X., Hehl, R., Karas, H., Liebich, I., Matys, V., Meinhardt, T., Pruss, M., Reuter, I. & Schacherer, F. (2000) Nucleic Acids Res 28, 316-9.
28.	Bader, G. D., Donaldson, I., Wolting, C., Ouellette, B. F., Pawson, T. & Hogue, C. W. (2001) Nucleic Acids Res 29, 242-5.
29.	Xenarios, I., Salwinski, L., Duan, X. J., Higney, P., Kim, S.-M. & Eisenberg, D. (2002) Nucl. Acids. Res. 30, 303-305.
30.	Csank, C., Costanzo, M. C., Hirschman, J., Hodges, P., Kranz, J. E., Mangan, M., O'Neill, K., Robertson, L. S., Skrzypek, M. S., Brooks, J. & Garrels, J. I. (2002) Methods Enzymol 350, 347-73.

[f1]Not sure that the sentence reads well.
[FC2] Remove?
[FC3] Luce says "This" What?



2


