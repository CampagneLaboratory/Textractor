
################################################################
# JDO Runtime settings for Solarmetric Kodo version 3.4.x
################################################################
textractor.JdoImplementation: kodo
textractor.JdoExtensionClass: textractor.database.PureJdoExtension

javax.jdo.PersistenceManagerFactoryClass: kodo.jdbc.runtime.JDBCPersistenceManagerFactory

javax.jdo.option.ConnectionDriverName: ${javax.jdo.option.ConnectionDriverName}
javax.jdo.option.ConnectionURL: ${javax.jdo.option.ConnectionURL} 
kodo.jdbc.DBDictionary: ReservedWords="INDEX,SYNONYM",BatchLimit=0 

javax.jdo.option.ConnectionUserName: ${javax.jdo.option.ConnectionUserName}
javax.jdo.option.ConnectionPassword: ${javax.jdo.option.ConnectionPassword}

javax.jdo.option.Optimistic: true
javax.jdo.option.RetainValues: true
javax.jdo.option.NontransactionalRead: true
javax.jdo.option.NontransactionalWrite: false
javax.jdo.option.Multithreaded: true

kodo.LicenseKey: ${kodo.LicenseKey}

# make sure we don't have to do manual flushes to get queries to see newly added or deleted objects
javax.jdo.option.IgnoreCache: false
kodo.FlushBeforeQueries: true
kodo.ConnectionRetainMode: transaction

kodo.ConnectionFactoryProperties: MaxCachedStatements=1000
kodo.PersistenceManagerImpl: DetachFields=all

# Kodo logging configuration.
# To disable logging altogether, set this to 'none':
#   kodo.Log: none
# To use Log4J, ensure that your Log4J configuration is set up
# appropriately, and set this to 'log4j':
#   kodo.Log: log4j
# To view traces of all SQL generated by Kodo when using Kodo's
# logging facilities, add 'SQL=TRACE' to this property string:
#   kodo.Log: DefaultLevel=WARN, SQL=TRACE
kodo.Log: log4j
